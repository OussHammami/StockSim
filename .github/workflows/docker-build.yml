name: CI - Build and Push Images (GHCR)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  ORG: ${{ github.repository_owner }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Derive tags
        id: vars
        shell: bash
        run: |
          SHA=${GITHUB_SHA}
          REPO_OWNER_LOWER=$(echo "${{ env.ORG }}" | tr '[:upper:]' '[:lower:]')
          echo "owner=${REPO_OWNER_LOWER}" >> $GITHUB_OUTPUT
          echo "sha=${SHA}" >> $GITHUB_OUTPUT
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "latest_tag=true" >> $GITHUB_OUTPUT
          else
            echo "latest_tag=false" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Web
        uses: docker/build-push-action@v6
        with:
          context: .
          file: src/StockSim.Web/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ steps.vars.outputs.owner }}/stocksim-web:${{ steps.vars.outputs.sha }}
            ${{ steps.vars.outputs.latest_tag == 'true' && format('{0}/{1}/stocksim-web:latest', env.REGISTRY, steps.vars.outputs.owner) || '' }}

      - name: Build and push MarketFeed
        uses: docker/build-push-action@v6
        with:
          context: .
          file: src/StockSim.MarketFeed/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ steps.vars.outputs.owner }}/stocksim-marketfeed:${{ steps.vars.outputs.sha }}
            ${{ steps.vars.outputs.latest_tag == 'true' && format('{0}/{1}/stocksim-marketfeed:latest', env.REGISTRY, steps.vars.outputs.owner) || '' }}

      - name: Build and push React
        uses: docker/build-push-action@v6
        with:
          context: src/StockSim.React
          file: src/StockSim.React/Dockerfile
          push: true
          build-args: |
            VITE_MARKETFEED_URL=http://localhost:8081
          tags: |
            ${{ env.REGISTRY }}/${{ steps.vars.outputs.owner }}/stocksim-react:${{ steps.vars.outputs.sha }}
            ${{ steps.vars.outputs.latest_tag == 'true' && format('{0}/{1}/stocksim-react:latest', env.REGISTRY, steps.vars.outputs.owner) || '' }}