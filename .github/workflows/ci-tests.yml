name: CI - Unit, Integration, and E2E

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Unit tests (Domain)
        run: dotnet test tests/StockSim.Domain.Tests/StockSim.Domain.Tests.csproj --configuration Release --no-build --collect:"XPlat Code Coverage" -r ./artifacts/tests/unit

      - name: Integration tests (Testcontainers)
        env:
          TESTCONTAINERS_HOST_OVERRIDE: localhost
        run: dotnet test tests/StockSim.IntegrationTests/StockSim.IntegrationTests.csproj --configuration Release --no-build --collect:"XPlat Code Coverage" -r ./artifacts/tests/integration

      - name: Cache e2e node_modules
        uses: actions/cache@v4
        with:
          path: e2e/node_modules
          key: e2e-${{ runner.os }}-${{ hashFiles('e2e/package-lock.json') }}
          restore-keys: |
            e2e-${{ runner.os }}-

      - name: Install e2e deps
        working-directory: e2e
        run: |
          npm ci
          npx playwright install --with-deps

      - name: Start compose stack for E2E
        run: docker compose -p ci up -d --build postgres rabbitmq marketfeed web react

      - name: Wait for services
        working-directory: e2e
        run: npm run pretest

      - name: E2E tests (Playwright)
        working-directory: e2e
        run: npm test

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: e2e/playwright-report

      - name: Upload Playwright traces
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces
          path: e2e/test-results

      - name: Upload coverage (unit + integration)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-coverage
          path: artifacts/tests
          
      - name: Tear down compose
        if: always()
        run: docker compose -p ci down -v